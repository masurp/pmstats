% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/result_table.r
\name{result_table}
\alias{result_table}
\title{Result table for linear models, multilevel models and structural equation models}
\usage{
result_table(object, new_labels = NULL, var_label = NULL,
  labels = FALSE, regressions = FALSE, std = TRUE, print = FALSE)
}
\arguments{
\item{object}{An object of class \code{lm}, \code{lmerModLmerTest} or \code{lavaan}.}

\item{new_labels}{A character vector with new labels for the paths in the model (needs to have the same number of values as paths in the model, potentially including the intercept).}

\item{var_label}{When using lavaan for SEM, paths can be labelled in the model. With this argument, one can specify which of the labelled paths should be printed (takes a single character value or a character ). This argument only works with objects of class \code{lavaan}.}

\item{labels}{A logical value specifying whether only paths with labels should be included. This argument only works with objects of class \code{lavaan}.}

\item{regressions}{A logical value specifying whether only regressions should be included. This argument only works with objects of class \code{lavaan}.}

\item{std}{A logical value indicating whether standarized coefficient should be included (works only with objects of class \code{lm} and \code{lavaan})}

\item{print}{A logical value indicating whether the resulting table should be formatted according to APA-guidelines.}
}
\description{
This function creates a printable results table based objects of class \code{lm}, \code{lmerModLmerTest} or \code{lavaan}. Several arguments can be specified in order to customize the output.
}
\examples{
## Example 1: Linear model
mod.lm <- lm(mpg ~ cyl, mtcars)
result_table(mod.lm, new_labels = c("", "H1"), print = TRUE)

## Example 2: Multilevel model
mod.lmer <- lmerTest::lmer(Reaction ~ 1 + Days + (1 | Subject), sleepstudy)
result_table(mod.lmer)
result_table(mod.lmer, new_labels = c(1, 2))

## Example 3: Structural equation model
model.sem <- '
  # latent variables
  ind60 =~ x1 + x2 + x3
  dem60 =~ y1 + y2 + y3 + y4
  dem65 =~ y5 + y6 + y7 + y8

  # regressions
  dem60 ~ a*ind60
  dem65 ~ b*ind60 + c*dem60

  # residual covariances
  y1 ~~ y5
  y2 ~~ y4 + y6
  y3 ~~ y7
  y4 ~~ y8
  y6 ~~ y8
'
fit.sem <- sem(model.sem, data = PoliticalDemocracy)
result_table(fit.sem, regressions = TRUE)
result_table(fit.sem, labels = TRUE)
result_table(fit.sem, labels = TRUE, new_labels = c("H1", "H2", "H3"), std = FALSE, print = TRUE)
}
